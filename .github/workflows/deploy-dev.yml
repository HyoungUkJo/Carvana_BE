name: Deploy to Amazon ECR (Dev)

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Verify environment variables
        run: |
          echo "ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}"
          echo "REPOSITORY: ${{ secrets.ECR_DEV_REPOSITORY }}"
          echo "IMAGE_TAG: ${{ github.sha }}"
          echo "Current directory: $(pwd)"
          echo "Dockerfile exists: $(test -f Dockerfile && echo 'yes' || echo 'no')"

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          REPOSITORY: ${{ secrets.ECR_DEV_REPOSITORY }}
          SHORT_SHA: ${{ steps.vars.outputs.SHORT_SHA }}

        run: |
          IMAGE_TAG=dev-$SHORT_SHA
          IMAGE_URI="${ECR_REGISTRY}/${REPOSITORY}:${IMAGE_TAG}"
          echo "Building image: $IMAGE_URI"
          docker build --platform linux/amd64 -t "${IMAGE_URI}" .
          docker push "${IMAGE_URI}"
          echo "image=${IMAGE_URI}" >> $GITHUB_OUTPUT
