name: Deploy to Amazon ECR (Dev)

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test # 지금은 테스트 코드를 작성 안했음으로 테스트 제거
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build, tag, and push Docker image to Dev ECR
        env:
          REGISTRY: ${{ secrets.ECR_REGISTRY }}
          REPOSITORY: carava/carwash-dev
        # 태그를 쓰지 않는 방식으로 빌드 후 push  
        run: |
          IMAGE_TAG=latest
          FULL_IMAGE=$REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker build -t $FULL_IMAGE .
          docker push $FULL_IMAGE
        # 태그방식 주석 처리 -> 이후 태그가 필요 없을경우 제거 예정    
        #run: |
         # IMAGE_TAG=latest
         # docker build -t $REPOSITORY .
         # docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG
         # docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

